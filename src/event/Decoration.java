/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package event;


import dbconnect.DatabaseHelper;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Sakibul
 */
public class Decoration extends javax.swing.JFrame {

    /**
     * Creates new form Decoration
     */
    static String w, x, y, z, v;
    DefaultTableModel model;
    DefaultTableModel model1;
    public Decoration(String a, String b, String c, String d, String e) {
        initComponents();
        w=a;
        x=b;
        y=c;
        z=d;
        v=e;
        addDecorEventIDlbl.setText(w);
        addDecorCusNIClbl.setText(x);
        hallpricedecor.setText(y);
        fpPricedecor.setText(z);
        hallno.setText(e);
        
        model=new DefaultTableModel();
        addDecorTable.setModel(model);
        
        model.addColumn("Event Id");
        model.addColumn("Customer NID");
        model.addColumn("Theme Color");
        model.addColumn("Description");
        model.addColumn("Special Req.");
        model.addColumn("Decor Price");
        model.addColumn("Special Req. Price");
        model.addColumn("Total");
        
        model1=new DefaultTableModel();
        updateDecorTable.setModel(model1);
        
        model1.addColumn("Theme Color");
        model1.addColumn("Description");
        model1.addColumn("Table Decoration");
        model1.addColumn("Wall Decoration");
        model1.addColumn("Flower Decoration");
        model1.addColumn("Disco Light");
        model1.addColumn("Entrance Arch.");
        model1.addColumn("Special Req.");
        model1.addColumn("Special Req. Price");
        model1.addColumn("Decor Price");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jTabbedPaneDecorations = new javax.swing.JTabbedPane();
        addDecorationsPanel = new javax.swing.JPanel();
        jLabel1AddDecorationColor = new javax.swing.JLabel();
        addDecorColor = new javax.swing.JComboBox();
        jScrollPane9 = new javax.swing.JScrollPane();
        txtAreaDescription = new javax.swing.JTextArea();
        jLabel1AddDecorationDescription = new javax.swing.JLabel();
        jLabel1AddDecorationTypes = new javax.swing.JLabel();
        jCheckBox1AddTableDecorations = new javax.swing.JCheckBox();
        jCheckBox2AddWallDecorations = new javax.swing.JCheckBox();
        jCheckBox3AddFlowerDecoration = new javax.swing.JCheckBox();
        jCheckBox4AddDiscoLight = new javax.swing.JCheckBox();
        jCheckBox5AddEntranceArch = new javax.swing.JCheckBox();
        jLabel1AddSpecialRequirements = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        txtAreaSpecialRequirements = new javax.swing.JTextArea();
        jButton7AddDecoration = new javax.swing.JButton();
        jButton8AddDecorReset = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        addDecorNext = new javax.swing.JButton();
        addDecorBack = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        txtAddDecorSRPrice = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        txtAddDecorPrice = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        addDecorTable = new javax.swing.JTable();
        addDecorAddPayment = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        hallpricedecor = new javax.swing.JLabel();
        fpPricedecor = new javax.swing.JLabel();
        addDecorTotal = new javax.swing.JTextField();
        addDecorEventIDlbl = new javax.swing.JTextField();
        addDecorCusNIClbl = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        hallno = new javax.swing.JTextField();
        updateDecorationsPanel = new javax.swing.JPanel();
        jLabel1UpdateDecorationEventID = new javax.swing.JLabel();
        txtUpdateDecorationEventID = new javax.swing.JTextField();
        jScrollPane12 = new javax.swing.JScrollPane();
        updateDecorTable = new javax.swing.JTable();
        updateDecorReset = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jComboUpdateDecorColor = new javax.swing.JComboBox();
        jLabel19 = new javax.swing.JLabel();
        jScrollPane19 = new javax.swing.JScrollPane();
        jTextAreaUpdatedecorDes = new javax.swing.JTextArea();
        jLabel20 = new javax.swing.JLabel();
        jScrollPane25 = new javax.swing.JScrollPane();
        jTextAreaUpdateDecorSR = new javax.swing.JTextArea();
        jLabel11 = new javax.swing.JLabel();
        jCheckBox1UpdateTable = new javax.swing.JCheckBox();
        jCheckBox2UpdateWall = new javax.swing.JCheckBox();
        jCheckBox3UpdateFlower = new javax.swing.JCheckBox();
        jCheckBox4UpdateDisco = new javax.swing.JCheckBox();
        jCheckBox5UpdateArch = new javax.swing.JCheckBox();
        updateDecorSRPricelbl = new javax.swing.JLabel();
        txtUpdateDecorSRPrice = new javax.swing.JTextField();
        updateDecorPricelbl = new javax.swing.JLabel();
        txtUpdateDecorPrice = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        updateDecorTotal = new javax.swing.JTextField();
        updateDecorEventIDlb = new javax.swing.JTextField();
        updateDecorSearch = new javax.swing.JButton();
        updateDecorBack = new javax.swing.JButton();
        updateDecorNext = new javax.swing.JButton();
        jButton9UpdateDecoration = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        Back = new javax.swing.JMenu();
        Home = new javax.swing.JMenu();
        Exit = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(0, 51, 51));

        jLabel6.setFont(new java.awt.Font("Monotype Corsiva", 1, 36)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(240, 240, 240));
        jLabel6.setText("Event Management");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(301, 301, 301)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(377, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel6)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jTabbedPaneDecorations.setBackground(new java.awt.Color(255, 255, 255));
        jTabbedPaneDecorations.setPreferredSize(new java.awt.Dimension(830, 548));

        addDecorationsPanel.setBackground(new java.awt.Color(255, 255, 255));
        addDecorationsPanel.setPreferredSize(new java.awt.Dimension(830, 550));
        addDecorationsPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1AddDecorationColor.setText("Theme Color");
        addDecorationsPanel.add(jLabel1AddDecorationColor, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, -1, -1));

        addDecorColor.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Color", "Red", "Blue", "Green", "Pink", "Purple", "White", "Yellow", "Orange", "Gold", "Silver", "Magenta", "Black" }));
        addDecorationsPanel.add(addDecorColor, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 140, 96, 20));

        txtAreaDescription.setColumns(20);
        txtAreaDescription.setRows(5);
        jScrollPane9.setViewportView(txtAreaDescription);

        addDecorationsPanel.add(jScrollPane9, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 180, 220, 60));

        jLabel1AddDecorationDescription.setText("Description");
        addDecorationsPanel.add(jLabel1AddDecorationDescription, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, -1, -1));

        jLabel1AddDecorationTypes.setText("Decoration Types");
        addDecorationsPanel.add(jLabel1AddDecorationTypes, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 20, -1, -1));

        jCheckBox1AddTableDecorations.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBox1AddTableDecorations.setText("Table Decorations");
        addDecorationsPanel.add(jCheckBox1AddTableDecorations, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 50, -1, -1));

        jCheckBox2AddWallDecorations.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBox2AddWallDecorations.setText("Wall Decorations");
        jCheckBox2AddWallDecorations.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2AddWallDecorationsActionPerformed(evt);
            }
        });
        addDecorationsPanel.add(jCheckBox2AddWallDecorations, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 80, -1, -1));

        jCheckBox3AddFlowerDecoration.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBox3AddFlowerDecoration.setText("Flower Decorations");
        addDecorationsPanel.add(jCheckBox3AddFlowerDecoration, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 110, -1, -1));

        jCheckBox4AddDiscoLight.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBox4AddDiscoLight.setText("Disco Light");
        addDecorationsPanel.add(jCheckBox4AddDiscoLight, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 140, -1, -1));

        jCheckBox5AddEntranceArch.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBox5AddEntranceArch.setText("Entrance Arch");
        addDecorationsPanel.add(jCheckBox5AddEntranceArch, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 170, -1, -1));

        jLabel1AddSpecialRequirements.setText("Special Requirements");
        addDecorationsPanel.add(jLabel1AddSpecialRequirements, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 20, -1, -1));

        txtAreaSpecialRequirements.setColumns(20);
        txtAreaSpecialRequirements.setRows(5);
        jScrollPane10.setViewportView(txtAreaSpecialRequirements);

        addDecorationsPanel.add(jScrollPane10, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 50, 190, 123));

        jButton7AddDecoration.setBackground(new java.awt.Color(51, 153, 255));
        jButton7AddDecoration.setText("Add Decoration");
        jButton7AddDecoration.setPreferredSize(new java.awt.Dimension(120, 25));
        jButton7AddDecoration.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7AddDecorationActionPerformed(evt);
            }
        });
        addDecorationsPanel.add(jButton7AddDecoration, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 420, -1, -1));

        jButton8AddDecorReset.setBackground(new java.awt.Color(51, 153, 255));
        jButton8AddDecorReset.setText("Reset");
        jButton8AddDecorReset.setPreferredSize(new java.awt.Dimension(80, 25));
        jButton8AddDecorReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8AddDecorResetActionPerformed(evt);
            }
        });
        addDecorationsPanel.add(jButton8AddDecorReset, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 420, -1, -1));

        jLabel21.setText("Event ID : ");
        addDecorationsPanel.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, -1, -1));

        jLabel23.setText("Customer NID : ");
        addDecorationsPanel.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, 80, -1));

        addDecorNext.setBackground(new java.awt.Color(51, 153, 255));
        addDecorNext.setText("Next");
        addDecorNext.setPreferredSize(new java.awt.Dimension(80, 25));
        addDecorNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDecorNextActionPerformed(evt);
            }
        });
        addDecorationsPanel.add(addDecorNext, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 420, -1, -1));

        addDecorBack.setBackground(new java.awt.Color(51, 153, 255));
        addDecorBack.setText("Back");
        addDecorBack.setPreferredSize(new java.awt.Dimension(80, 25));
        addDecorBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDecorBackActionPerformed(evt);
            }
        });
        addDecorationsPanel.add(addDecorBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 420, -1, -1));

        jLabel22.setText("Special Requirements Price:");
        addDecorationsPanel.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 210, -1, -1));

        txtAddDecorSRPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAddDecorSRPriceKeyTyped(evt);
            }
        });
        addDecorationsPanel.add(txtAddDecorSRPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(578, 200, 110, 29));

        jLabel24.setText("Decoration Price :");
        addDecorationsPanel.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 260, -1, -1));

        txtAddDecorPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAddDecorPriceKeyTyped(evt);
            }
        });
        addDecorationsPanel.add(txtAddDecorPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 250, 101, 31));

        addDecorTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Event ID", "Customer NIC", "Theme Color", "Description", "Special Req", "Decor Price", "Special Req Price", "Total"
            }
        ));
        addDecorTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addDecorTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(addDecorTable);

        addDecorationsPanel.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 300, 790, 100));

        addDecorAddPayment.setBackground(new java.awt.Color(51, 153, 255));
        addDecorAddPayment.setText("Add Payment");
        addDecorAddPayment.setPreferredSize(new java.awt.Dimension(120, 25));
        addDecorAddPayment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDecorAddPaymentActionPerformed(evt);
            }
        });
        addDecorationsPanel.add(addDecorAddPayment, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 420, -1, -1));

        jButton5.setBackground(new java.awt.Color(51, 153, 255));
        jButton5.setText("Total");
        jButton5.setPreferredSize(new java.awt.Dimension(90, 25));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        addDecorationsPanel.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 250, 140, 20));

        hallpricedecor.setEnabled(false);
        addDecorationsPanel.add(hallpricedecor, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 500, 50, 20));

        fpPricedecor.setEnabled(false);
        addDecorationsPanel.add(fpPricedecor, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 500, 50, 20));
        addDecorationsPanel.add(addDecorTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 240, 110, 30));
        addDecorationsPanel.add(addDecorEventIDlbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 20, 80, -1));
        addDecorationsPanel.add(addDecorCusNIClbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 70, 210, -1));

        jLabel1.setText("Hall No :");
        addDecorationsPanel.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, -1, -1));
        addDecorationsPanel.add(hallno, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 100, 80, -1));

        jTabbedPaneDecorations.addTab("Add Decorations", addDecorationsPanel);

        updateDecorationsPanel.setBackground(new java.awt.Color(255, 255, 255));
        updateDecorationsPanel.setPreferredSize(new java.awt.Dimension(830, 550));

        jLabel1UpdateDecorationEventID.setText("Enter Customer NIC");

        updateDecorTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Theme Color", "Description", "Table Decoration", "Wall Decoration", "Flower Decoration", "Disco Light", "Entrance Arch", "Special Requirements", "special req price", "Decor Price"
            }
        ));
        updateDecorTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updateDecorTableMouseClicked(evt);
            }
        });
        jScrollPane12.setViewportView(updateDecorTable);

        updateDecorReset.setBackground(new java.awt.Color(51, 153, 255));
        updateDecorReset.setText("Reset");
        updateDecorReset.setPreferredSize(new java.awt.Dimension(80, 25));
        updateDecorReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateDecorResetActionPerformed(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel16.setText("Event ID");
        jPanel4.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        jLabel18.setText("Theme Color");
        jPanel4.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, -1, -1));

        jComboUpdateDecorColor.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Color", "Red", "Blue", "Green", "Pink", "Purple", "White", "Yellow", "Orange", "Gold", "Silver", "Magenta", "Black" }));
        jPanel4.add(jComboUpdateDecorColor, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 50, 100, 20));

        jLabel19.setText("Description");
        jPanel4.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 10, -1, -1));

        jTextAreaUpdatedecorDes.setColumns(20);
        jTextAreaUpdatedecorDes.setRows(5);
        jScrollPane19.setViewportView(jTextAreaUpdatedecorDes);

        jPanel4.add(jScrollPane19, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 30, 140, 110));

        jLabel20.setText("Special Requirements");
        jPanel4.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 10, -1, -1));

        jTextAreaUpdateDecorSR.setColumns(20);
        jTextAreaUpdateDecorSR.setRows(5);
        jScrollPane25.setViewportView(jTextAreaUpdateDecorSR);

        jPanel4.add(jScrollPane25, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 30, 150, 110));

        jLabel11.setText("Decoration Types");
        jPanel4.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 10, -1, -1));

        jCheckBox1UpdateTable.setText("Table Decoration");
        jPanel4.add(jCheckBox1UpdateTable, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 30, -1, 20));

        jCheckBox2UpdateWall.setText("Wall Decoration");
        jPanel4.add(jCheckBox2UpdateWall, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 50, 110, 20));

        jCheckBox3UpdateFlower.setText("Flower Decoration");
        jPanel4.add(jCheckBox3UpdateFlower, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 70, 120, 20));

        jCheckBox4UpdateDisco.setText("Disco Light");
        jPanel4.add(jCheckBox4UpdateDisco, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 90, 110, 20));

        jCheckBox5UpdateArch.setText("Entrance Arch");
        jPanel4.add(jCheckBox5UpdateArch, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 110, 120, 20));

        updateDecorSRPricelbl.setText("Special Requirement Price");
        jPanel4.add(updateDecorSRPricelbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 160, -1, -1));

        txtUpdateDecorSRPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUpdateDecorSRPriceActionPerformed(evt);
            }
        });
        jPanel4.add(txtUpdateDecorSRPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 150, 90, 30));

        updateDecorPricelbl.setText("Decoration Price");
        jPanel4.add(updateDecorPricelbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 104, -1, 10));
        jPanel4.add(txtUpdateDecorPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 100, 80, 20));

        jButton6.setBackground(new java.awt.Color(51, 153, 255));
        jButton6.setText("Total");
        jButton6.setPreferredSize(new java.awt.Dimension(80, 25));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, -1, -1));
        jPanel4.add(updateDecorTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 150, 90, 30));
        jPanel4.add(updateDecorEventIDlb, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 10, 100, 20));

        updateDecorSearch.setBackground(new java.awt.Color(51, 153, 255));
        updateDecorSearch.setText("Search");
        updateDecorSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateDecorSearchActionPerformed(evt);
            }
        });

        updateDecorBack.setBackground(new java.awt.Color(51, 153, 255));
        updateDecorBack.setText("Back");
        updateDecorBack.setPreferredSize(new java.awt.Dimension(80, 25));
        updateDecorBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateDecorBackActionPerformed(evt);
            }
        });

        updateDecorNext.setBackground(new java.awt.Color(51, 153, 255));
        updateDecorNext.setText("Next");
        updateDecorNext.setPreferredSize(new java.awt.Dimension(80, 25));
        updateDecorNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateDecorNextActionPerformed(evt);
            }
        });

        jButton9UpdateDecoration.setBackground(new java.awt.Color(51, 153, 255));
        jButton9UpdateDecoration.setText("Update Decoration");
        jButton9UpdateDecoration.setPreferredSize(new java.awt.Dimension(125, 25));
        jButton9UpdateDecoration.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9UpdateDecorationActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout updateDecorationsPanelLayout = new javax.swing.GroupLayout(updateDecorationsPanel);
        updateDecorationsPanel.setLayout(updateDecorationsPanelLayout);
        updateDecorationsPanelLayout.setHorizontalGroup(
            updateDecorationsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateDecorationsPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(updateDecorationsPanelLayout.createSequentialGroup()
                .addGroup(updateDecorationsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(updateDecorationsPanelLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel1UpdateDecorationEventID)
                        .addGap(18, 18, 18)
                        .addComponent(txtUpdateDecorationEventID, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(updateDecorSearch))
                    .addGroup(updateDecorationsPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 782, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(updateDecorationsPanelLayout.createSequentialGroup()
                        .addGap(153, 153, 153)
                        .addComponent(updateDecorBack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(updateDecorNext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(jButton9UpdateDecoration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58)
                        .addComponent(updateDecorReset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        updateDecorationsPanelLayout.setVerticalGroup(
            updateDecorationsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateDecorationsPanelLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(updateDecorationsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1UpdateDecorationEventID)
                    .addComponent(txtUpdateDecorationEventID, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateDecorSearch))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(updateDecorationsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton9UpdateDecoration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateDecorBack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateDecorNext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateDecorReset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60))
        );

        jTabbedPaneDecorations.addTab("Update Decorations", updateDecorationsPanel);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPaneDecorations, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPaneDecorations, javax.swing.GroupLayout.PREFERRED_SIZE, 482, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(0, 51, 51));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 143, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 482, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 838, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        Back.setText("Back");
        Back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BackMouseClicked(evt);
            }
        });
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });
        jMenuBar1.add(Back);

        Home.setText("Home");
        Home.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                HomeMouseClicked(evt);
            }
        });
        Home.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HomeActionPerformed(evt);
            }
        });
        jMenuBar1.add(Home);

        Exit.setText("Exit");
        Exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ExitMouseClicked(evt);
            }
        });
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });
        jMenuBar1.add(Exit);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void BackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BackMouseClicked
        // TODO add your handling code here:
        EventManager mp = new EventManager();
        mp.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_BackMouseClicked

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BackActionPerformed

    private void HomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HomeMouseClicked
        // TODO add your handling code here:
        EventManager HM = new EventManager();
        HM.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_HomeMouseClicked

    private void HomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HomeActionPerformed

    private void ExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExitMouseClicked
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_ExitMouseClicked

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ExitActionPerformed

    private void jCheckBox2AddWallDecorationsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2AddWallDecorationsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox2AddWallDecorationsActionPerformed

    private void jButton7AddDecorationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7AddDecorationActionPerformed
        Connection con=null;
        Statement st=null;
        ResultSet rs=null;
        try {
            int x = JOptionPane.showConfirmDialog(null, "Do you want to save this record?");
            if(x==0){
                String decorEventID=addDecorEventIDlbl.getText().toString();
                String decorCusNIC=addDecorCusNIClbl.getText();
                String decorColor=addDecorColor.getSelectedItem().toString();
                String decorDes=txtAreaDescription.getText();
                String decorSR=txtAreaSpecialRequirements.getText();
                String decorSRPrice=txtAddDecorSRPrice.getText();
                String decorPrice=txtAddDecorPrice.getText();
                String decorTotal=addDecorTotal.getText();

                String tableDecor=null;
                String wallDecor=null;
                String flowerDecor=null;
                String dicoLight=null;
                String entranceArch=null;
                if(jCheckBox1AddTableDecorations.isSelected()){
                    tableDecor=jCheckBox1AddTableDecorations.getText().toString();
                }
                if(jCheckBox2AddWallDecorations.isSelected()){
                    wallDecor=jCheckBox2AddWallDecorations.getText().toString();
                }
                if(jCheckBox3AddFlowerDecoration.isSelected()){
                    flowerDecor=jCheckBox3AddFlowerDecoration.getText().toString();
                }
                if(jCheckBox4AddDiscoLight.isSelected()){
                    dicoLight=jCheckBox4AddDiscoLight.getText().toString();
                }
                if(jCheckBox5AddEntranceArch.isSelected()){
                    entranceArch=jCheckBox5AddEntranceArch.getText().toString();
                }
                con = DatabaseHelper.getDBConnection();
                st=con.createStatement();

                String sql="INSERT INTO event_decoration (decor_event_id,decor_customer_NIC,theme_color,decor_description,table_decoration,wall_decoration,flower_decoration,disco_light,entrance_arch,decor_special_requirements,decor_special_req_price,decor_price,decor_total) VALUES ('"+decorEventID+"','"+decorCusNIC+"','"+decorColor+"','"+decorDes+"','"+tableDecor+"','"+wallDecor+"','"+flowerDecor+"','"+dicoLight+"','"+entranceArch+"','"+decorSR+"','"+decorSRPrice+"','"+decorPrice+"','"+decorTotal+"')";
                
                st.executeUpdate(sql);
                st=con.createStatement();
                
                String sql2="select * from event_decoration where decor_event_id='"+decorEventID+"'";
                rs=st.executeQuery(sql2);
                while(rs.next()){
                    model.addRow(new Object[]{rs.getString("decor_event_id"), rs.getString("decor_customer_NIC"), rs.getString("theme_color"), rs.getString("decor_description"), rs.getString("decor_special_requirements"), rs.getString("decor_special_req_price"), rs.getString("decor_total") });
                }
                JOptionPane.showMessageDialog(null, "Successfully added to the database");
                rs.close();
                st.close();
                con.close();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_jButton7AddDecorationActionPerformed

    private void addDecorNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDecorNextActionPerformed
        jTabbedPaneDecorations.setSelectedIndex(1);
    }//GEN-LAST:event_addDecorNextActionPerformed

    private void addDecorBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDecorBackActionPerformed
        String a=addDecorEventIDlbl.getText();
        String b=addDecorCusNIClbl.getText();
        String c="";
        FoodPanel fp=new FoodPanel(a,b,c);
        fp.setVisible(true);
        this.dispose();
        
    }//GEN-LAST:event_addDecorBackActionPerformed

    private void addDecorTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addDecorTableMouseClicked
        int row=addDecorTable.getSelectedRow();

        String decorEventId=addDecorTable.getValueAt(row, 1).toString();
        String decorCusNIC=addDecorTable.getValueAt(row, 2).toString();
        addDecorEventIDlbl.setText(decorEventId);
        addDecorCusNIClbl.setText(decorCusNIC);

    }//GEN-LAST:event_addDecorTableMouseClicked

    private void addDecorAddPaymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDecorAddPaymentActionPerformed
        String a, b, c;
        a=addDecorEventIDlbl.getText();
        b=addDecorCusNIClbl.getText();
        c=hallno.getText();
        Payment pt = new Payment(a, b,c);
        pt.setVisible(true);
        this.dispose();
        



    }//GEN-LAST:event_addDecorAddPaymentActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        double srPrice=Double.parseDouble(txtAddDecorSRPrice.getText());
        double decorPrice=Double.parseDouble(txtAddDecorPrice.getText());
        double tot=srPrice+decorPrice;
        addDecorTotal.setText(Double.toString(tot));
    }//GEN-LAST:event_jButton5ActionPerformed

    private void updateDecorTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateDecorTableMouseClicked
        int row=updateDecorTable.getSelectedRow();

        String decorId=updateDecorTable.getValueAt(row, 0).toString();
        String decorEventID=updateDecorTable.getValueAt(row, 1).toString();
        String decorColor=updateDecorTable.getValueAt(row, 2).toString();
        String decorDes=updateDecorTable.getValueAt(row, 3).toString();
        String decorSR=updateDecorTable.getValueAt(row, 9).toString();

        
        updateDecorEventIDlb.setText(decorEventID);
        jComboUpdateDecorColor.setSelectedItem(decorColor);
        jTextAreaUpdatedecorDes.setText(decorDes);
        jTextAreaUpdateDecorSR.setText(decorSR);

    }//GEN-LAST:event_updateDecorTableMouseClicked

    private void updateDecorResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateDecorResetActionPerformed
        txtUpdateDecorationEventID.setText("");
      
        updateDecorEventIDlb.setText("");
        jComboUpdateDecorColor.setSelectedItem("Color");
        updateDecorTotal.setText("");
        txtUpdateDecorPrice.setText("");
        jTextAreaUpdatedecorDes.setText("");
        jTextAreaUpdateDecorSR.setText("");
        txtUpdateDecorSRPrice.setText("");
    }//GEN-LAST:event_updateDecorResetActionPerformed

    private void txtUpdateDecorSRPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUpdateDecorSRPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUpdateDecorSRPriceActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        double srPrice=Double.parseDouble(txtUpdateDecorSRPrice.getText());
        double decorPrice=Double.parseDouble(txtUpdateDecorPrice.getText());
        double tot=srPrice+decorPrice;
        updateDecorTotal.setText(Double.toString(tot));
    }//GEN-LAST:event_jButton6ActionPerformed

    private void updateDecorSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateDecorSearchActionPerformed
        Connection conn;
        try {
            conn = DatabaseHelper.getDBConnection();
            String cusNIC=txtUpdateDecorationEventID.getText();
            Statement s=conn.createStatement();
            ResultSet rs= s.executeQuery("SELECT * from event_decoration WHERE decor_customer_NIC = '"+cusNIC+"'");

            while(rs.next()){
                
                updateDecorEventIDlb.setText(rs.getString("decor_event_id"));
                jComboUpdateDecorColor.setSelectedItem(rs.getString("theme_color"));
                jTextAreaUpdatedecorDes.setText(rs.getString("decor_description"));
                jTextAreaUpdateDecorSR.setText(rs.getString("decor_special_requirements"));
                jCheckBox1UpdateTable.setSelectedIcon(null);

            }

            rs.close();
            s.close();
            conn.close();

        }
        catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_updateDecorSearchActionPerformed

    private void updateDecorBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateDecorBackActionPerformed
        jTabbedPaneDecorations.setSelectedIndex(0);
    }//GEN-LAST:event_updateDecorBackActionPerformed

    private void updateDecorNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateDecorNextActionPerformed
       jTabbedPaneDecorations.setSelectedIndex(0);
    }//GEN-LAST:event_updateDecorNextActionPerformed

    private void jButton9UpdateDecorationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9UpdateDecorationActionPerformed
        Connection con=null;
        Statement st=null;
        ResultSet rs=null;
        try {
            int x=JOptionPane.showConfirmDialog(null, "Do you want to update this record?");
            if(x==0){
                String decorColor=jComboUpdateDecorColor.getSelectedItem().toString();
                String decorDes=jTextAreaUpdatedecorDes.getText();
                String decorSR=jTextAreaUpdateDecorSR.getText();
                String srPrice=txtUpdateDecorSRPrice.getText();
                String tPrice=txtUpdateDecorPrice.getText();
                String nid = txtUpdateDecorationEventID.getText();
                String UpdatetableDecor=null;
                String UpdatewallDecor=null;
                String UpdateflowerDecor=null;
                String UpdatedicoLight=null;
                String UpdateentranceArch=null;
                if(jCheckBox1UpdateTable.isSelected()){
                    UpdatetableDecor=jCheckBox1UpdateTable.getText().toString();
                }
                if(jCheckBox2UpdateWall.isSelected()){
                    UpdatewallDecor=jCheckBox2UpdateWall.getText().toString();
                }
                if(jCheckBox3UpdateFlower.isSelected()){
                    UpdateflowerDecor=jCheckBox3UpdateFlower.getText().toString();
                }
                if(jCheckBox4UpdateDisco.isSelected()){
                    UpdatedicoLight=jCheckBox4UpdateDisco.getText().toString();
                }
                if(jCheckBox5UpdateArch.isSelected()){
                    UpdateentranceArch=jCheckBox5UpdateArch.getText().toString();
                }
                con = DatabaseHelper.getDBConnection();
                
                String sql="UPDATE event_decoration SET theme_color='"+decorColor+"',decor_description='"+decorDes+"',table_decoration='"+UpdatetableDecor+"',wall_decoration='"+UpdatewallDecor+"',flower_decoration='"+UpdateflowerDecor+"',disco_light='"+UpdatedicoLight+"',entrance_arch='"+UpdateentranceArch+"',decor_special_requirements='"+decorSR+"',decor_special_req_price='"+srPrice+"',decor_price='"+tPrice+"' where decor_customer_NIC='"+nid+"'";
                st=con.createStatement();
                st.executeUpdate(sql);
                
                String sql2="select * from event_decoration where decor_customer_NIC='"+nid+"'";
                rs=st.executeQuery(sql2);
                while(rs.next()){
                    model1.addRow(new Object[]{rs.getString("theme_color"), rs.getString("decor_description"), rs.getString("table_decoration"), rs.getString("wall_decoration"), rs.getString("flower_decoration"), rs.getString("disco_light"), rs.getString("entrance_arch"), rs.getString("decor_special_requirements"), rs.getString("decor_special_req_price"), rs.getString("decor_price") });
                }
                rs.close();
                st.close();
                con.close();

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton9UpdateDecorationActionPerformed

    private void jButton8AddDecorResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8AddDecorResetActionPerformed
        
    }//GEN-LAST:event_jButton8AddDecorResetActionPerformed

    private void txtAddDecorPriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAddDecorPriceKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || c == KeyEvent.VK_DELETE)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtAddDecorPriceKeyTyped

    private void txtAddDecorSRPriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAddDecorSRPriceKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || c == KeyEvent.VK_DELETE)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtAddDecorSRPriceKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Decoration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Decoration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Decoration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Decoration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Decoration(w,x,y,z,v).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu Back;
    private javax.swing.JMenu Exit;
    private javax.swing.JMenu Home;
    private javax.swing.JButton addDecorAddPayment;
    private javax.swing.JButton addDecorBack;
    private javax.swing.JComboBox addDecorColor;
    private javax.swing.JTextField addDecorCusNIClbl;
    private javax.swing.JTextField addDecorEventIDlbl;
    private javax.swing.JButton addDecorNext;
    private javax.swing.JTable addDecorTable;
    private javax.swing.JTextField addDecorTotal;
    private javax.swing.JPanel addDecorationsPanel;
    private javax.swing.JLabel fpPricedecor;
    private javax.swing.JTextField hallno;
    private javax.swing.JLabel hallpricedecor;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7AddDecoration;
    private javax.swing.JButton jButton8AddDecorReset;
    private javax.swing.JButton jButton9UpdateDecoration;
    private javax.swing.JCheckBox jCheckBox1AddTableDecorations;
    private javax.swing.JCheckBox jCheckBox1UpdateTable;
    private javax.swing.JCheckBox jCheckBox2AddWallDecorations;
    private javax.swing.JCheckBox jCheckBox2UpdateWall;
    private javax.swing.JCheckBox jCheckBox3AddFlowerDecoration;
    private javax.swing.JCheckBox jCheckBox3UpdateFlower;
    private javax.swing.JCheckBox jCheckBox4AddDiscoLight;
    private javax.swing.JCheckBox jCheckBox4UpdateDisco;
    private javax.swing.JCheckBox jCheckBox5AddEntranceArch;
    private javax.swing.JCheckBox jCheckBox5UpdateArch;
    private javax.swing.JComboBox jComboUpdateDecorColor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel1AddDecorationColor;
    private javax.swing.JLabel jLabel1AddDecorationDescription;
    private javax.swing.JLabel jLabel1AddDecorationTypes;
    private javax.swing.JLabel jLabel1AddSpecialRequirements;
    private javax.swing.JLabel jLabel1UpdateDecorationEventID;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane19;
    private javax.swing.JScrollPane jScrollPane25;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPaneDecorations;
    private javax.swing.JTextArea jTextAreaUpdateDecorSR;
    private javax.swing.JTextArea jTextAreaUpdatedecorDes;
    private javax.swing.JTextField txtAddDecorPrice;
    private javax.swing.JTextField txtAddDecorSRPrice;
    private javax.swing.JTextArea txtAreaDescription;
    private javax.swing.JTextArea txtAreaSpecialRequirements;
    private javax.swing.JTextField txtUpdateDecorPrice;
    private javax.swing.JTextField txtUpdateDecorSRPrice;
    private javax.swing.JTextField txtUpdateDecorationEventID;
    private javax.swing.JButton updateDecorBack;
    private javax.swing.JTextField updateDecorEventIDlb;
    private javax.swing.JButton updateDecorNext;
    private javax.swing.JLabel updateDecorPricelbl;
    private javax.swing.JButton updateDecorReset;
    private javax.swing.JLabel updateDecorSRPricelbl;
    private javax.swing.JButton updateDecorSearch;
    private javax.swing.JTable updateDecorTable;
    private javax.swing.JTextField updateDecorTotal;
    private javax.swing.JPanel updateDecorationsPanel;
    // End of variables declaration//GEN-END:variables
}
