/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package finance;


import dbconnect.DatabaseHelper;
import java.awt.Color;
import java.awt.event.ItemEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Sameera
 */
public class Finance_Settings extends javax.swing.JPanel {

    /**
     * Creates new form Finance_Settings
     */
    Connection conn = DatabaseHelper.getDBConnection();
    PreparedStatement pStatement = null;
    ResultSet resultSet = null;
    String sqlQuery, sqlQuery2;
    DBAccess dbaFinance = new DBAccess();
    
    
    String userListUserId, userListEmployeeId, userListFullName, userListUsername, userListPassword;
    
    public Finance_Settings() {
        initComponents();
        
    }
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void retrieveEmployeeId(JComboBox combobox, String text){
        combobox.removeAllItems();
        combobox.addItem(text);
        try{
            sqlQuery2 = "select e.employee_id as 'Employee Id' from hr_employee e left join system_user u on e.employee_id=u.employee_id where u.employee_id is null and e.employee_type='Permanent' and e.employee_department='Finance'";
            pStatement = conn.prepareStatement(sqlQuery2);
            resultSet = pStatement.executeQuery();
            while(resultSet.next()){               
                combobox.addItem(resultSet.getInt("Employee Id")); //set employee id to combo box
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(new Finance_Main("").togglePanels, e, "Employee ID Retrieving Error!", 0);
        } 
    }
    
    public void finusertableload(){
        try{
            String sql = "select system_user_id as 'User ID', employee_id as 'Employee ID', full_name as 'Full Name',  username as 'Username', password as 'Password', "
                    + " DATE_FORMAT(last_updated_date, '%Y-%m-%d') as 'Last Updated Date' from system_user where user_availability = 'available' and department = 'Finance' and access_level not like 'Admin'";
            pStatement = conn.prepareStatement(sql);
            resultSet = pStatement.executeQuery();
            userListTable.setModel(DbUtils.resultSetToTableModel(resultSet));
            
             sql = "select system_user_id as 'User ID', employee_id as 'Employee ID', full_name as 'Full Name',  username as 'Username', password as 'Password', "
                    + " DATE_FORMAT(last_updated_date, '%Y-%m-%d') as 'Last Updated Date' from system_user where user_availability = 'removed' and department = 'Finance' and access_level not like 'Admin'";
            pStatement = conn.prepareStatement(sql);
            resultSet = pStatement.executeQuery();
            removedUsersTable.setModel(DbUtils.resultSetToTableModel(resultSet));
        }catch(Exception e){
            JOptionPane.showMessageDialog(new Finance_Main("").togglePanels, e, "User Data Retrieval Error!", 0);
        }
        
        
    }
    
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        userTabbedPane = new javax.swing.JTabbedPane();
        userListPanel = new javax.swing.JPanel();
        userListScrollPane = new javax.swing.JScrollPane();
        userListTable = new javax.swing.JTable();
        userListEditUserButton = new javax.swing.JButton();
        addUserEmployeeIdComboBox = new javax.swing.JComboBox<>();
        addUserEmployeeIdLabel = new javax.swing.JLabel();
        addUserFullNameLabel = new javax.swing.JLabel();
        addUserFullName = new javax.swing.JTextField();
        addUserUsernameLabel = new javax.swing.JLabel();
        addUserPasswordLabel = new javax.swing.JLabel();
        addUserUsernameTextField1 = new javax.swing.JTextField();
        userListUserIdTextField = new javax.swing.JTextField();
        addUserFullNameLabel1 = new javax.swing.JLabel();
        jButtonResetBudgetAllocate = new javax.swing.JButton();
        jButtonSearchBudgetRequest = new javax.swing.JButton();
        jButtonAddLiability = new javax.swing.JButton();
        addUserPasswordTextField = new javax.swing.JPasswordField();
        addUserAccessLevel = new javax.swing.JComboBox<>();
        addUserEmployeeIdLabel1 = new javax.swing.JLabel();
        editUserPanel = new javax.swing.JPanel();
        editUserEditUserButton = new javax.swing.JButton();
        editUserRemoveUserButton = new javax.swing.JButton();
        editUserIdLabel = new javax.swing.JLabel();
        editUserIdTextField = new javax.swing.JTextField();
        editUserFullNameLabel = new javax.swing.JLabel();
        editUserUsernameLabel = new javax.swing.JLabel();
        editUserFullNameText = new javax.swing.JTextField();
        editUserPasswordLabel = new javax.swing.JLabel();
        editEmployeeIdLabel = new javax.swing.JLabel();
        editEmployeeIdTextField = new javax.swing.JTextField();
        editUserUsernameTextField1 = new javax.swing.JTextField();
        editUserPasswordTextField = new javax.swing.JPasswordField();
        removedUsersPanel = new javax.swing.JPanel();
        removedUsersScrollPane = new javax.swing.JScrollPane();
        removedUsersTable = new javax.swing.JTable();
        jButtonResetCashflow1 = new javax.swing.JButton();
        removedUsersUserIdTextField = new javax.swing.JTextField();
        addUserFullNameLabel3 = new javax.swing.JLabel();
        removedUsersUserNameTextField = new javax.swing.JTextField();
        addUserFullNameLabel4 = new javax.swing.JLabel();
        jButtonViewCashflow1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new java.awt.GridBagLayout());

        userTabbedPane.setBackground(new java.awt.Color(255, 255, 255));
        userTabbedPane.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        userTabbedPane.setPreferredSize(new java.awt.Dimension(830, 548));

        userListPanel.setBackground(new java.awt.Color(255, 255, 255));
        userListPanel.setForeground(new java.awt.Color(42, 135, 235));
        userListPanel.setPreferredSize(new java.awt.Dimension(825, 519));

        userListScrollPane.setBackground(new java.awt.Color(255, 255, 255));
        userListScrollPane.setBorder(null);

        userListTable.setAutoCreateRowSorter(true);
        userListTable.setForeground(new java.awt.Color(42, 135, 235));
        userListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "User ID", "Employee ID", "Full Name", "Username", "Password", "Reg Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        userListTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        userListTable.setFocusable(false);
        userListTable.setGridColor(new java.awt.Color(42, 135, 235));
        userListTable.getTableHeader().setResizingAllowed(false);
        userListTable.getTableHeader().setReorderingAllowed(false);
        userListTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                userListTableMouseClicked(evt);
            }
        });
        userListScrollPane.setViewportView(userListTable);

        userListEditUserButton.setBackground(new java.awt.Color(255, 255, 255));
        userListEditUserButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        userListEditUserButton.setForeground(new java.awt.Color(51, 153, 255));
        userListEditUserButton.setText("Edit User");
        userListEditUserButton.setFocusable(false);
        userListEditUserButton.setPreferredSize(new java.awt.Dimension(111, 30));
        userListEditUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userListEditUserButtonActionPerformed(evt);
            }
        });

        addUserEmployeeIdComboBox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        addUserEmployeeIdComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Employee ID", "" }));
        addUserEmployeeIdComboBox.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 102, 255)));
        addUserEmployeeIdComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                addUserEmployeeIdComboBoxItemStateChanged(evt);
            }
        });

        addUserEmployeeIdLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        addUserEmployeeIdLabel.setText("Employee ID");

        addUserFullNameLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        addUserFullNameLabel.setText("Full Name");

        addUserFullName.setEditable(false);
        addUserFullName.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        addUserFullName.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        addUserFullName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 102, 255)));

        addUserUsernameLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        addUserUsernameLabel.setText("Username");

        addUserPasswordLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        addUserPasswordLabel.setText("Password");

        addUserUsernameTextField1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        addUserUsernameTextField1.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        addUserUsernameTextField1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 102, 255)));

        userListUserIdTextField.setEditable(false);
        userListUserIdTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        userListUserIdTextField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        userListUserIdTextField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 102, 255)));

        addUserFullNameLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        addUserFullNameLabel1.setText("User ID");

        jButtonResetBudgetAllocate.setBackground(new java.awt.Color(255, 255, 255));
        jButtonResetBudgetAllocate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonResetBudgetAllocate.setForeground(new java.awt.Color(102, 153, 255));
        jButtonResetBudgetAllocate.setText("Reset");
        jButtonResetBudgetAllocate.setFocusable(false);
        jButtonResetBudgetAllocate.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButtonResetBudgetAllocate.setMargin(new java.awt.Insets(2, 5, 2, 14));
        jButtonResetBudgetAllocate.setPreferredSize(new java.awt.Dimension(73, 30));
        jButtonResetBudgetAllocate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonResetBudgetAllocateActionPerformed(evt);
            }
        });

        jButtonSearchBudgetRequest.setBackground(new java.awt.Color(255, 255, 255));
        jButtonSearchBudgetRequest.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonSearchBudgetRequest.setForeground(new java.awt.Color(51, 153, 255));
        jButtonSearchBudgetRequest.setText("Find");
        jButtonSearchBudgetRequest.setFocusable(false);
        jButtonSearchBudgetRequest.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButtonSearchBudgetRequest.setMargin(new java.awt.Insets(2, 5, 2, 14));
        jButtonSearchBudgetRequest.setPreferredSize(new java.awt.Dimension(73, 30));
        jButtonSearchBudgetRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchBudgetRequestActionPerformed(evt);
            }
        });

        jButtonAddLiability.setBackground(new java.awt.Color(255, 255, 255));
        jButtonAddLiability.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonAddLiability.setForeground(new java.awt.Color(51, 153, 255));
        jButtonAddLiability.setText("Add");
        jButtonAddLiability.setFocusable(false);
        jButtonAddLiability.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButtonAddLiability.setMargin(new java.awt.Insets(2, 5, 2, 14));
        jButtonAddLiability.setPreferredSize(new java.awt.Dimension(73, 30));
        jButtonAddLiability.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddLiabilityActionPerformed(evt);
            }
        });

        addUserPasswordTextField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        addUserPasswordTextField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 102, 255)));

        addUserAccessLevel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        addUserAccessLevel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select User Level", "Assistant", "Accountant" }));
        addUserAccessLevel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 102, 255)));

        addUserEmployeeIdLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        addUserEmployeeIdLabel1.setText("Access Level");

        javax.swing.GroupLayout userListPanelLayout = new javax.swing.GroupLayout(userListPanel);
        userListPanel.setLayout(userListPanelLayout);
        userListPanelLayout.setHorizontalGroup(
            userListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userListPanelLayout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(userListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(userListPanelLayout.createSequentialGroup()
                        .addComponent(addUserEmployeeIdLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(addUserEmployeeIdComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(userListPanelLayout.createSequentialGroup()
                        .addComponent(addUserFullNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(addUserFullName, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(userListPanelLayout.createSequentialGroup()
                        .addComponent(addUserFullNameLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(userListUserIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(userListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(userListPanelLayout.createSequentialGroup()
                        .addComponent(addUserUsernameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(addUserUsernameTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(userListPanelLayout.createSequentialGroup()
                        .addGroup(userListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(addUserPasswordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addUserEmployeeIdLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(userListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addUserAccessLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addUserPasswordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(79, 79, 79))
            .addGroup(userListPanelLayout.createSequentialGroup()
                .addGroup(userListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(userListPanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(userListScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(userListPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButtonResetBudgetAllocate, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonSearchBudgetRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(userListEditUserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonAddLiability, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        userListPanelLayout.setVerticalGroup(
            userListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userListPanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(userListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(userListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(userListUserIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(addUserFullNameLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(userListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(addUserUsernameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(addUserUsernameTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(19, 19, 19)
                .addGroup(userListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addUserPasswordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addUserPasswordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addUserEmployeeIdComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addUserEmployeeIdLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(userListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(userListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(addUserFullName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(addUserFullNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(userListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(addUserAccessLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(addUserEmployeeIdLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(28, 28, 28)
                .addGroup(userListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, userListPanelLayout.createSequentialGroup()
                        .addComponent(userListScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addGroup(userListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonAddLiability, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(userListEditUserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonSearchBudgetRequest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5))
                    .addComponent(jButtonResetBudgetAllocate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        userTabbedPane.addTab("User List", userListPanel);

        editUserPanel.setBackground(new java.awt.Color(255, 255, 255));
        editUserPanel.setForeground(new java.awt.Color(42, 135, 235));
        editUserPanel.setPreferredSize(new java.awt.Dimension(825, 519));

        editUserEditUserButton.setBackground(new java.awt.Color(255, 255, 255));
        editUserEditUserButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        editUserEditUserButton.setForeground(new java.awt.Color(42, 135, 235));
        editUserEditUserButton.setText("Update User");
        editUserEditUserButton.setFocusPainted(false);
        editUserEditUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editUserEditUserButtonActionPerformed(evt);
            }
        });

        editUserRemoveUserButton.setBackground(new java.awt.Color(255, 255, 255));
        editUserRemoveUserButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        editUserRemoveUserButton.setForeground(new java.awt.Color(42, 135, 235));
        editUserRemoveUserButton.setText("Remove User");
        editUserRemoveUserButton.setFocusPainted(false);
        editUserRemoveUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editUserRemoveUserButtonActionPerformed(evt);
            }
        });

        editUserIdLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        editUserIdLabel.setText("User ID");

        editUserIdTextField.setEditable(false);
        editUserIdTextField.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        editUserFullNameLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        editUserFullNameLabel.setText("Full Name");

        editUserUsernameLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        editUserUsernameLabel.setText("Username");

        editUserFullNameText.setEditable(false);
        editUserFullNameText.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        editUserPasswordLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        editUserPasswordLabel.setText("Password");

        editEmployeeIdLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        editEmployeeIdLabel.setText("Employee ID");

        editEmployeeIdTextField.setEditable(false);
        editEmployeeIdTextField.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        editUserUsernameTextField1.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        editUserPasswordTextField.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        javax.swing.GroupLayout editUserPanelLayout = new javax.swing.GroupLayout(editUserPanel);
        editUserPanel.setLayout(editUserPanelLayout);
        editUserPanelLayout.setHorizontalGroup(
            editUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editUserPanelLayout.createSequentialGroup()
                .addGap(219, 219, 219)
                .addGroup(editUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(editUserPanelLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(editUserEditUserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(editUserRemoveUserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(editUserPanelLayout.createSequentialGroup()
                        .addGroup(editUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(editUserFullNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(editUserIdLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(editEmployeeIdLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(editUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(editUserFullNameText, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)
                            .addComponent(editEmployeeIdTextField)
                            .addComponent(editUserIdTextField)))
                    .addGroup(editUserPanelLayout.createSequentialGroup()
                        .addGroup(editUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editUserPanelLayout.createSequentialGroup()
                                .addComponent(editUserUsernameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18))
                            .addGroup(editUserPanelLayout.createSequentialGroup()
                                .addComponent(editUserPasswordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))
                        .addGroup(editUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(editUserUsernameTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)
                            .addComponent(editUserPasswordTextField))))
                .addContainerGap(245, Short.MAX_VALUE))
        );
        editUserPanelLayout.setVerticalGroup(
            editUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editUserPanelLayout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addGroup(editUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editUserIdLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editUserIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(editUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editEmployeeIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editEmployeeIdLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(editUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editUserFullNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editUserFullNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(editUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editUserUsernameTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editUserUsernameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(editUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editUserPasswordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editUserPasswordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(editUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editUserEditUserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editUserRemoveUserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        userTabbedPane.addTab("Edit User", editUserPanel);

        removedUsersPanel.setBackground(new java.awt.Color(255, 255, 255));
        removedUsersPanel.setForeground(new java.awt.Color(42, 135, 235));
        removedUsersPanel.setPreferredSize(new java.awt.Dimension(825, 519));

        removedUsersScrollPane.setBackground(new java.awt.Color(255, 255, 255));
        removedUsersScrollPane.setBorder(null);

        removedUsersTable.setAutoCreateRowSorter(true);
        removedUsersTable.setForeground(new java.awt.Color(42, 135, 235));
        removedUsersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "User ID", "Full Name", "Username", "Reg Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        removedUsersTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        removedUsersTable.setFocusable(false);
        removedUsersTable.setGridColor(new java.awt.Color(42, 135, 235));
        removedUsersTable.getTableHeader().setResizingAllowed(false);
        removedUsersTable.getTableHeader().setReorderingAllowed(false);
        removedUsersScrollPane.setViewportView(removedUsersTable);

        jButtonResetCashflow1.setBackground(new java.awt.Color(255, 255, 255));
        jButtonResetCashflow1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonResetCashflow1.setForeground(new java.awt.Color(102, 153, 255));
        jButtonResetCashflow1.setText("Reset");
        jButtonResetCashflow1.setFocusable(false);
        jButtonResetCashflow1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButtonResetCashflow1.setMargin(new java.awt.Insets(2, 5, 2, 14));
        jButtonResetCashflow1.setPreferredSize(new java.awt.Dimension(73, 30));
        jButtonResetCashflow1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonResetCashflow1ActionPerformed(evt);
            }
        });

        removedUsersUserIdTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        removedUsersUserIdTextField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        removedUsersUserIdTextField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 102, 255)));

        addUserFullNameLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        addUserFullNameLabel3.setText("User ID");

        removedUsersUserNameTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        removedUsersUserNameTextField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        removedUsersUserNameTextField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 102, 255)));

        addUserFullNameLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        addUserFullNameLabel4.setText("Username");

        jButtonViewCashflow1.setBackground(new java.awt.Color(255, 255, 255));
        jButtonViewCashflow1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonViewCashflow1.setForeground(new java.awt.Color(51, 153, 255));
        jButtonViewCashflow1.setText("Find");
        jButtonViewCashflow1.setFocusable(false);
        jButtonViewCashflow1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButtonViewCashflow1.setMargin(new java.awt.Insets(2, 5, 2, 14));
        jButtonViewCashflow1.setPreferredSize(new java.awt.Dimension(73, 30));
        jButtonViewCashflow1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonViewCashflow1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout removedUsersPanelLayout = new javax.swing.GroupLayout(removedUsersPanel);
        removedUsersPanel.setLayout(removedUsersPanelLayout);
        removedUsersPanelLayout.setHorizontalGroup(
            removedUsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(removedUsersPanelLayout.createSequentialGroup()
                .addGroup(removedUsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(removedUsersPanelLayout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(addUserFullNameLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(removedUsersUserIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62)
                        .addComponent(addUserFullNameLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(removedUsersUserNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(removedUsersPanelLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(removedUsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(removedUsersPanelLayout.createSequentialGroup()
                                .addComponent(jButtonResetCashflow1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonViewCashflow1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(removedUsersScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 778, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(27, 27, 27))
        );
        removedUsersPanelLayout.setVerticalGroup(
            removedUsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(removedUsersPanelLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(removedUsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(removedUsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(removedUsersUserIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(addUserFullNameLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(removedUsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(removedUsersUserNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(addUserFullNameLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30)
                .addComponent(removedUsersScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(removedUsersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonResetCashflow1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonViewCashflow1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5))
        );

        userTabbedPane.addTab("Removed Users", removedUsersPanel);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipady = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        add(userTabbedPane, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void userListTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userListTableMouseClicked
        int row = userListTable.getSelectedRow();   //Getting data from table row
        userListUserId = userListTable.getValueAt(row, 0).toString();
        userListEmployeeId = userListTable.getValueAt(row, 1).toString();
        userListFullName = userListTable.getValueAt(row, 2).toString();
        userListUsername = userListTable.getValueAt(row, 3).toString();
        userListPassword = userListTable.getValueAt(row, 4).toString();
        //Assigning values to relevant variables for editing
        editUserIdTextField.setText(userListUserId);
        editEmployeeIdTextField.setText(userListEmployeeId);
        editUserFullNameText.setText(userListFullName);
        editUserUsernameTextField1.setText(userListUsername);
        editUserPasswordTextField.setText(userListPassword);
    }//GEN-LAST:event_userListTableMouseClicked

    private void userListEditUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userListEditUserButtonActionPerformed
        //Resetting update field colors
        editUserFullNameText.setBackground(new Color(255, 255, 255));
        editUserFullNameText.setBackground(new Color(255, 255, 255));
        editUserPasswordTextField.setBackground(new Color(255, 255, 255));
        if(userListUserId == null){
            JOptionPane.showMessageDialog(userListPanel, "Please select a user from the user list to continue.", "No User Selected!", 2);
        }else{
            userTabbedPane.setEnabledAt(1, true);
            userTabbedPane.setSelectedIndex(1);
        }
    }//GEN-LAST:event_userListEditUserButtonActionPerformed

    private void editUserEditUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editUserEditUserButtonActionPerformed
        String fullName, username, password;  //Variable declaration
        fullName = editUserFullNameText.getText();
        username = editUserUsernameTextField1.getText();
        password = editUserPasswordTextField.getText();
        //validations
        if(fullName.isEmpty())
        editUserFullNameText.setBackground(new Color(255, 150, 150));
        else
        editUserFullNameText.setBackground(new Color(255, 255, 255));
        if(username.isEmpty())
        editUserFullNameText.setBackground(new Color(255, 150, 150));
        else
        editUserFullNameText.setBackground(new Color(255, 255, 255));
        if(password.isEmpty())
        editUserPasswordTextField.setBackground(new Color(255, 150, 150));
        else
        editUserPasswordTextField.setBackground(new Color(255, 255, 255));
        if(fullName.isEmpty() || username.isEmpty() || password.isEmpty()){
            JOptionPane.showMessageDialog(editUserPanel, "Please fill all the fields to continue.", "Form Incomplete!", 0);
        }else{
            int confirm = JOptionPane.showConfirmDialog(editUserPanel, "Are you sure you want to update this user?", "Update User", 0, 3); 
            if(confirm == 0){
                try{
                    //Checking user availability
                    sqlQuery = "select * from system_user where full_name = '"+fullName+"' and username = '"+username+"'";
                    pStatement = conn.prepareStatement(sqlQuery);
                    resultSet = pStatement.executeQuery();
                    if(resultSet.isBeforeFirst()){
                        JOptionPane.showMessageDialog(editUserPanel, "User data you tried to update is already available.", "User Already Available!", 2);
                    }else{//Inserting validated result to the database
                        sqlQuery = "update system_user set username = '"+username+"', password = '"+password+"' "
                        + " where system_user_id = "+userListUserId+" and employee_id = "+userListEmployeeId;
                        pStatement = conn.prepareStatement(sqlQuery);
                        pStatement.execute();
                        JOptionPane.showMessageDialog(editUserPanel, "User data Successfully Updated.", "User Updated!", 1);    //print successful message
                      userListUserId=null;
                      userTabbedPane.setSelectedIndex(0);
                      userTabbedPane.setEnabledAt(1, false);
                      finusertableload();
                    }
                }catch(Exception e){
                    JOptionPane.showMessageDialog(editUserPanel, e, "User data Updation Error!", 0);
                }
            }
        }
    }//GEN-LAST:event_editUserEditUserButtonActionPerformed

    private void editUserRemoveUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editUserRemoveUserButtonActionPerformed
        int confirm = JOptionPane.showConfirmDialog(editUserPanel, "Are you sure you want to remove this user?", "Remove User", 0, 3);
        if (confirm == 0){//Removing user data
            try {
                sqlQuery2 = "update system_user set user_availability = 'removed' where system_user_id = "+userListUserId+" and employee_id = "+userListEmployeeId;
                pStatement = conn.prepareStatement(sqlQuery2);
                pStatement.execute();
                JOptionPane.showMessageDialog(editUserPanel, "User data Successfully Removed.", "User Removed!", 1);
                userListUserId=null;
                userTabbedPane.setEnabledAt(1, false);
                userTabbedPane.setSelectedIndex(0);
                finusertableload();
            } catch(Exception e){
                JOptionPane.showMessageDialog(editUserPanel, e, "User data Removal Error!", 0);
            }
        }
    }//GEN-LAST:event_editUserRemoveUserButtonActionPerformed

    private void jButtonResetBudgetAllocateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonResetBudgetAllocateActionPerformed
        userListUserIdTextField.setText("");
        addUserEmployeeIdComboBox.setSelectedIndex(0);
        addUserFullName.setText("");
        addUserPasswordTextField.setText("");
        addUserUsernameTextField1.setText("");
        addUserAccessLevel.setSelectedIndex(0);
        int id=dbaFinance.getlastid("system_user", "system_user_id");
        userListUserIdTextField.setText(Integer.toString(id+1));
        finusertableload();
    }//GEN-LAST:event_jButtonResetBudgetAllocateActionPerformed

    private void jButtonSearchBudgetRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchBudgetRequestActionPerformed
        String username, levels;
        username = addUserUsernameTextField1.getText();
        levels= addUserAccessLevel.getSelectedItem().toString();
        if(levels.equals("Select User Level"))
                levels="";
        try{    
            sqlQuery = "select system_user_id as 'User ID', employee_id as 'Employee ID', full_name as 'Full Name', username as 'Username', password as 'Password', "
                   + " DATE_FORMAT(last_updated_date, '%Y-%m-%d') as 'Last Updated Date' from system_user where user_availability = 'available' and department = 'Finance' and "
                    + "username like '%"+username+"%' and access_level like '%"+levels+"%'"; 
            pStatement = conn.prepareStatement(sqlQuery);
            resultSet = pStatement.executeQuery();
            userListTable.setModel(DbUtils.resultSetToTableModel(resultSet));
        }catch(Exception e){
            JOptionPane.showMessageDialog(userListPanel, e, "User data Retrieval Error!", 0);
        }
    }//GEN-LAST:event_jButtonSearchBudgetRequestActionPerformed

    private void jButtonAddLiabilityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddLiabilityActionPerformed
        String employeeId, fullName, username,usernamedb="", password, accessLevel;
        employeeId = addUserEmployeeIdComboBox.getSelectedItem().toString();
        fullName = addUserFullName.getText();
        username = addUserUsernameTextField1.getText();
        password = addUserPasswordTextField.getText();
        accessLevel=addUserAccessLevel.getSelectedItem().toString();
        //validations
        if(employeeId.equals("Select Employee ID"))
            addUserEmployeeIdComboBox.setBackground(new Color(255, 150, 150));
        else
            addUserEmployeeIdComboBox.setBackground(new Color(255, 255, 255));
        if(fullName.isEmpty())
            addUserFullName.setBackground(new Color(255, 150, 150));
        else
            addUserFullName.setBackground(new Color(255, 255, 255));
        if(username.isEmpty())
            addUserFullName.setBackground(new Color(255, 150, 150));
        else
            addUserFullName.setBackground(new Color(255, 255, 255));
        if(password.isEmpty())
            addUserPasswordTextField.setBackground(new Color(255, 150, 150));
        else
            addUserPasswordTextField.setBackground(new Color(255, 255, 255));
        if(accessLevel.equals("Select User Level"))
            addUserEmployeeIdComboBox.setBackground(new Color(255, 150, 150));
        else
            addUserEmployeeIdComboBox.setBackground(new Color(255, 255, 255));
        //Displaying Error Message
        if(employeeId.equals("Select Employee ID") || fullName.isEmpty() || username.isEmpty() || password.isEmpty()){
            JOptionPane.showMessageDialog(null, "Please fill all the fields to continue.", "Form Incomplete!", 0);
        }else{
            try{
                String sql="select * from system_user";
                pStatement=conn.prepareStatement(sql);
                resultSet=pStatement.executeQuery();
                
                while(resultSet.next()){ 
                    usernamedb=resultSet.getString("username");    
                    if(username.equals(usernamedb)){
                        addUserUsernameTextField1.setBackground(new Color(255,150,150));
                        JOptionPane.showMessageDialog(userListPanel,"Username Already Exist!","Input Error",0);
                        break;
                    }
                    else{
                        addUserUsernameTextField1.setBackground(new Color(255,255,255));
                    }
                }
                if(!username.equals(usernamedb)){
                        int confirm = JOptionPane.showConfirmDialog(null, "Are you sure you want to add an user?", "Add User", 0, 3);        //get confirmation for adding item to database
                        if(confirm == 0){//Checking whether the user is already available
                            //Inserting into System User table
                                sqlQuery = "insert into system_user(full_name, username, password, access_level, department, employee_id) "
                                + "values('"+fullName+"', '"+username+"', '"+password+"' ,'"+accessLevel+"', 'Finance', "+employeeId+")";
                                pStatement = conn.prepareStatement(sqlQuery);
                                pStatement.execute();
                                JOptionPane.showMessageDialog(null, "User successfully added to the database.", "User Added!", 1);    //print successful message
                                int id=dbaFinance.getlastid("system_user", "system_user_id");
                                userListUserIdTextField.setText(Integer.toString(id+1));
                                retrieveEmployeeId(addUserEmployeeIdComboBox,"Select Employee ID");
                                finusertableload();
                            }
                }
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, e, "User Add Error!", 0);
            }
        }
    }//GEN-LAST:event_jButtonAddLiabilityActionPerformed

    private void jButtonResetCashflow1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonResetCashflow1ActionPerformed
        removedUsersUserIdTextField.setText("");
        removedUsersUserNameTextField.setText("");
        finusertableload();
    }//GEN-LAST:event_jButtonResetCashflow1ActionPerformed

    private void jButtonViewCashflow1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonViewCashflow1ActionPerformed
        String userId, username;
        userId = removedUsersUserIdTextField.getText();
        username = removedUsersUserNameTextField.getText();
        
        if(userId.isEmpty()&&username.isEmpty()){
            JOptionPane.showMessageDialog(userListPanel,"Please Enter Atleast one Input!", "No Input!",0);
        }
        else{
            try{
                sqlQuery = "select system_user_id as 'User ID', employee_id as 'Employee ID', full_name as 'Full Name', username as 'Username', password as 'Password', "
                + " DATE_FORMAT(last_updated_date, '%Y-%m-%d') as 'Last Updated Date' from system_user where user_availability = 'removed' and department = 'Finance' and "
                + "CAST(system_user_id as CHAR) like '%"+userId+"%' and username like '%"+username+"%' and access_level not like 'Admin'";
                pStatement = conn.prepareStatement(sqlQuery);
                resultSet = pStatement.executeQuery();
                removedUsersTable.setModel(DbUtils.resultSetToTableModel(resultSet));
            }catch(Exception e){
                JOptionPane.showMessageDialog(removedUsersPanel, e, "Removed User data Retrieval Error!", 0);
            }
        }
    }//GEN-LAST:event_jButtonViewCashflow1ActionPerformed

    private void addUserEmployeeIdComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_addUserEmployeeIdComboBoxItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            String employeeId = addUserEmployeeIdComboBox.getSelectedItem().toString();
            String fname="", lname="";
            if(employeeId.equals("Select Employee ID"))
                employeeId="00000";
            try{
                String sql="select * from hr_employee where employee_id="+employeeId;
                pStatement=conn.prepareStatement(sql);
                resultSet=pStatement.executeQuery();
                
                if(resultSet.next()){
                    fname=resultSet.getString("employee_fname");
                    lname=resultSet.getString("employee_lname");
                }
                addUserFullName.setText(fname+" "+lname);
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(userListPanel,e);
            }
        }
    }//GEN-LAST:event_addUserEmployeeIdComboBoxItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> addUserAccessLevel;
    protected javax.swing.JComboBox<String> addUserEmployeeIdComboBox;
    private javax.swing.JLabel addUserEmployeeIdLabel;
    private javax.swing.JLabel addUserEmployeeIdLabel1;
    private javax.swing.JTextField addUserFullName;
    private javax.swing.JLabel addUserFullNameLabel;
    private javax.swing.JLabel addUserFullNameLabel1;
    private javax.swing.JLabel addUserFullNameLabel3;
    private javax.swing.JLabel addUserFullNameLabel4;
    private javax.swing.JLabel addUserPasswordLabel;
    private javax.swing.JPasswordField addUserPasswordTextField;
    private javax.swing.JLabel addUserUsernameLabel;
    private javax.swing.JTextField addUserUsernameTextField1;
    private javax.swing.JLabel editEmployeeIdLabel;
    private javax.swing.JTextField editEmployeeIdTextField;
    private javax.swing.JButton editUserEditUserButton;
    private javax.swing.JLabel editUserFullNameLabel;
    private javax.swing.JTextField editUserFullNameText;
    private javax.swing.JLabel editUserIdLabel;
    private javax.swing.JTextField editUserIdTextField;
    private javax.swing.JPanel editUserPanel;
    private javax.swing.JLabel editUserPasswordLabel;
    private javax.swing.JPasswordField editUserPasswordTextField;
    private javax.swing.JButton editUserRemoveUserButton;
    private javax.swing.JLabel editUserUsernameLabel;
    private javax.swing.JTextField editUserUsernameTextField1;
    private javax.swing.JButton jButtonAddLiability;
    protected javax.swing.JButton jButtonResetBudgetAllocate;
    private javax.swing.JButton jButtonResetCashflow1;
    private javax.swing.JButton jButtonSearchBudgetRequest;
    private javax.swing.JButton jButtonViewCashflow1;
    private javax.swing.JPanel removedUsersPanel;
    private javax.swing.JScrollPane removedUsersScrollPane;
    protected javax.swing.JTable removedUsersTable;
    private javax.swing.JTextField removedUsersUserIdTextField;
    private javax.swing.JTextField removedUsersUserNameTextField;
    private javax.swing.JButton userListEditUserButton;
    private javax.swing.JPanel userListPanel;
    private javax.swing.JScrollPane userListScrollPane;
    protected javax.swing.JTable userListTable;
    protected javax.swing.JTextField userListUserIdTextField;
    protected javax.swing.JTabbedPane userTabbedPane;
    // End of variables declaration//GEN-END:variables
}
